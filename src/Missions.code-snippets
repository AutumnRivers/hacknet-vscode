{
	"MissionTemplate":{
		"prefix": "<HacknetMission>",
		"scope": "xml",
		"body":
		[
			"<?xml version = \"1.0\" encoding = \"UTF-8\" ?>",
			"<mission id=\"${1:startingMission}\" activeCheck=\"${2|false,true|}\" shouldIgnoreSenderVerification=\"${3|false,true|}\">",
			"\t<goals>",
			"\t\t<goal type=\"${4:filedeletion}\" target=\"${5:clearNode}\" file=\"${6:deleteme.txt}\" path=\"${7:home}\"/>",
			"\t</goals>",
			"",
			"\t<missionStart val=\"${8:3}\">${9|setFaction:factionID,addRank,addRankSilent,addFlags:CSEC_Member,removeFlags:flag1,changeSong,loadConditionalActions:Actions/CoolAction.xml,setHubServer:hubServerID,setAssetServer:assetServerID,playCustomSong:Music/CoolSong.ogg,playCustomSongImmediatley:Music/IntenseSong.ogg,changeSongDLC|}</missionStart>",
			"\t<missionEnd>${10|setFaction:factionID,addRank,addRankSilent,addFlags:CSEC_Member,removeFlags:flag1,changeSong,loadConditionalActions:Actions/CoolAction.xml,setHubServer:hubServerID,setAssetServer:assetServerID,playCustomSong:Music/CoolSong.ogg,playCustomSongImmediatley:Music/IntenseSong.ogg,changeSongDLC|}</missionEnd>",
			"",
			"\t<nextMission IsSilent=\"${12|false,true|}\">${13|NONE,Missions/NextMission.xml|}</nextMission>",
			"\t<branchMissions>",
			"${14:\t\t<branch>${15:Missions/BranchMission.xml}</branch>}",
			"\t</branchMissions>",
			"",
			"\t<posting title=\"${16:New Mission!}\">$17</posting>",
			"",
			"\t<email>",
			"\t\t<sender>${18:Bit}</sender>",
			"\t\t<subject>${19:Hello}</subject>",
			"\t\t<body>${20:Hi, my name is Bit. And if you're reading this, then I'm already dead.}</body>",
			"\t\t<attachments>",
			"\t\t\t<note title=\"${21:Important Note}\">${22:SSHCrack opens port 22. Also, these can be multiple lines.}</note>",
			"\t\t\t<link comp=\"${23:linkedNodeID}\"/>",
			"\t\t\t<account comp=\"${24:linkedNodeID2}\" user=\"${25:username}\" pass=\"${0:password}\"/>",
			"\t\t</attachments>",
			"\t</email>",
			"</mission>"
		],
		"description": "Full template for a basic mission layout using the FileDeletion goal. Refer to the official guide for more mission goals."
	},
	"SequencerMission":{
		"prefix": "<SequencerMission>",
		"scope": "xml",
		"body":
		[
			"<?xml version = \"1.0\" encoding = \"UTF-8\" ?>",
			"<mission id=\"${1:sequencerMission}\" activeCheck=\"true\">",
			"\t<goals>",
			"\t\t<goal type=\"clearfolder\" target=\"${2:finaleNode}\" path=\"${3|home,bin,log,sys|}\"/>",
			"\t\t<goal type=\"clearfolder\" target=\"${2:finaleNode}\" path=\"${4|sys,home,bin,log|}\"/>",
			"\t</goals>",
			"",
			"\t<missionEnd>addFlags:${5:seqComplete}</missionEnd>",
			"",
			"\t<nextMission IsSilent=\"false\">${6|NONE,Missions/FinaleMission.xml|}</nextMission>",
			"",
			"\t<posting title=\"${7:Sequencer Mission}\">$8</posting>",
			"",
			"\t<email>",
			"\t\t<sender>${9:Leon}</sender>",
			"\t\t<subject>${10:Final Phase}</subject>",
			"\t\t<body>${11:This is usually the end of the extension. Make it count.}</body>",
			"\t\t<attachments>",
			"\t\t\t<note title=\"${12:Goal}\">${13:Clear the home and sys folders. Grab the sequencer from the asset server.}</note>",
			"\t\t\t<link comp=\"${14:assetServer}\"/>",
			"\t\t\t<account comp=\"${14:assetServer}\" user=\"${15:admin}\" pass=\"${0:alpine}\"/>",
			"\t\t</attachments>",
			"\t</email>",
			"</mission>"
		],
		"description": "Full template for a basic mission layout using the FileDeletion goal. Refer to the official guide for more mission goals."
	},
	"MissionGoalFileDeletion":{
		"prefix": "<FileDeletionGoal>",
		"scope": "xml",
		"body": "<goal type=\"filedeletion\" target=\"${1:nodeID}\" file=\"${2:deleteme.txt}\" path=\"${0|home,bin,log,sys|}\"/>",
		"description": "Task to delete the file on node target, at path/file"
	},
	"ClearFolder":{
		"prefix": "<ClearFolderGoal>",
		"scope": "xml",
		"body": "<goal type=\"clearfolder\" target=\"${1:nodeID}\" path=\"${0|sys,home,bin,log|}\"/>",
		"description": "Task to delete ALL files on node target, in the folder at path"
	},
	"FileDownload":{
		"prefix": "<FileDownloadGoal>",
		"scope": "xml",
		"body": "<goal type=\"filedownload\" target=\"${1:nodeID}\" file=\"${2:downloadme.txt}\" path=\"${0|home,bin,log,sys|}\"/>",
		"description": "Task to download the file at the path"
	},
	"FileChange":{
		"prefix": "<FileChangeGoal>",
		"scope": "xml",
		"body": "<goal type=\"filechange\" target=\"${1:nodeID}\" file=\"${2:changeme.txt}\" path=\"${3|home,bin,log,sys|}\" keyword=\"${4:hacknet}\" caseSensetive=\"${0|false,true|}\"/>",
		"description": "Task to add the text specified by keyword to the specified file. This is usually achieved by the \"replace\" command. It's possible to make the keyword a larger block and task the player to replace one file with another."
	},
	"FileChangeRemove":{
		"prefix": "<FileChangeRemovalGoal>",
		"scope": "xml",
		"body": "<goal type=\"filechange\" target=\"${1:nodeID}\" file=\"${2:changeme.txt}\" path=\"${3|home,bin,log,sys|}\" keyword=\"${0:kaguya}\" removal=\"true\"/>",
		"description": "Task to remove the text specified by keyword to the specified file. This is usually achieved by the \"replace\" command. The extra attribute \"removal\" tasks the player with removing a block of text from a file. Combining this with another filechange task can require a \"replacement\" of text (removing some, adding a different block)."
	},
	"GetAdmin":{
		"prefix": "<GetAdminGoal>",
		"scope": "xml",
		"body": "<goal type=\"getadmin\" target=\"${0:nodeID}\"/>",
		"description": "Task to get admin on the target system."
	},
	"DelayGoal":{
		"prefix": "<DelayGoal>",
		"scope": "xml",
		"body": "<goal type=\"delay\" time=\"$0\"/>",
		"description": "This task will not complete until \"time\" seconds after the first attempt to complete it has been made."
	},
	"HasFlag":{
		"prefix": "<HasFlagGoal>",
		"scope": "xml",
		"body": "<goal type=\"hasflag\" target=\"${0:someFlag,someOtherFlag}\"/>",
		"description": "This will only accept if the target flag has been set."
	},
	"UploadFile":{
		"prefix": "<UploadFileGoal>",
		"scope": "xml",
		"body": "<goal type=\"fileupload\" target=\"${1:nodeID}\" file=\"${2:uploadme.txt}\" path=\"${3|home,bin,log,sys|}\" destTarget=\"${4:dropNodeID}\" destPath=\"${0|Drop/Uploads,Drop,home,bin,log,sys|}\"/>",
		"description": "Task to require a string passed in via the \"Additional Info\" field in the reply email screen."
	},
	"UploadFileDecrypted":{
		"prefix": "<UploadFileDecryptedGoal>",
		"scope": "xml",
		"body": "<goal type=\"fileupload\" target=\"${1:nodeID}\" file=\"${2:uploadme}.dec\" path=\"${3|home,bin,log,sys|}\" destTarget=\"${4:dropNodeID}\" destPath=\"${5|Drop/Uploads,Drop,home,bin,log,sys|}\" decrypt=\"true\" decryptPass=\"${0:password}\"/>",
		"description": "For uploading encrypted files - put the encrypted name here (ending with .dec usually). It doesn't matter what the filename of the decrypted one becomes."
	},
	"GetString":{
		"prefix": "<GetStringGoal>",
		"scope": "xml",
		"body": "<goal type=\"getstring\" target=\"$0\"/>",
		"description": "Task to require a string passed in via the \"Additional Info\" field in the reply email screen."
	},
	"AddDegree":{
		"prefix": "<AddDegreeGoal>",
		"scope": "xml",
		"body": "<goal type=\"AddDegree\" owner=\"${1:John Doe}\" degree=\"${2:Masters of Computer Science}\" uni=\"${3:Manchester University}\" gpa=\"${0:3.4}\"/>",
		"description": "Task to add the degree matching the degree name and uni and GPA details for the listed owner. This task *requires* an academic server to exist."
	},
	"WipeDegrees":{
		"prefix": "<WipeDegreesGoal>",
		"scope": "xml",
		"body": "<goal type=\"wipedegrees\" owner=\"${0:Jane Doe}\"/>",
		"description": "Task to remove all degrees from the academic server for a specified owner. Note that for this one, you *MUST* have the ID of your database be \"academic\" or it wont find it."
	},
	"SendEmail":{
		"prefix": "<SendEmailGoal>",
		"scope": "xml",
		"body": "<goal type=\"sendemail\" mailServer=\"${1:jmail}\" recipient=\"${2:mailGuy}\" subject=\"${0:Important!}\"/>",
		"description": "NOTE: THIS GOAL USUALLY DOES *NOT* WORK - Task to have an email sent to a specified address with a defined subject."
	},
	"GetAdminPassword":{
		"prefix": "<GetAdminPasswordGoal>",
		"scope": "xml",
		"body": "<goal type=\"getadminpasswordstring\" target=\"${0:nodeID}\"/>",
		"description": "Requires the player to respond with the current admin password for the linked server. This is useful for servers that change passwords - like ones with password resetting admins, and databases that allow for admin password reset."
	},
	"NodeAttachment":{
		"prefix": "<AttachmentNode>",
		"scope": "xml",
		"body": "<link comp=\"${0:assetServer}\"/>",
		"description": "Attaches a node to the email for the mission. Set the comp value to the desired node ID. When the user clicks the attachment, the node will be added to the player's netmap."
	},
	"NoteAttachment":{
		"prefix": "<AttachNote>",
		"scope": "xml",
		"body": [
			"<note title=\"${1:Objectives}\">${2:This is a note.}",
			"${0:It can be multiple lines, too!}</note>"
		],
		"description": "Attaches a note to the email for the mission. When the user clicks the attachment, the note will be added to their notes and instantly appear in their RAM."
	},
	"AccountAttachment":{
		"prefix": "<AttachAccount>",
		"scope": "xml",
		"body": "<account comp=\"${1:assetServer}\" user=\"${2:admin}\" pass=\"${0:honeypot}\"/>",
		"description": "Attaches a node account to the email. When the user clicks the attachment, they will be given the account for that node (if the account exists.) You can also use this independently of the node attachment, as the node will be added to the netmap from this as well."
	}
}